#ifndef _H_TESTE
#define _H_TESTE
#include<stdio.h>
#include<stdlib.h>
#include<string.h>
#include<time.h>
#define tam 10
typedef int TipoChave;
typedef struct Questao *TipoApontaQuest;
typedef struct Opcao *TipoApontaOp;

typedef struct Opcao {
    TipoChave Chave;
    char *opcao;
    char resp;
    TipoApontaOp Prox;
} TipoOpcao;

typedef struct  {
    TipoApontaOp Primeiro, Ultimo;
} TipoListaOpcoes;

typedef struct Questao {
    TipoChave Chave;
    char *enunciado;
    TipoListaOpcoes opcoes;
    TipoApontaQuest Prox;
} TipoQuestao;

typedef struct {
    TipoApontaQuest Primeiro, Ultimo;
} TipoListaQuestoes;

/*-----------------------------------------------------------------------------------------------*/
//Retorna TRUE se a lista de Questoes está vazia
/*-----------------------------------------------------------------------------------------------*/
int VaziaQ(TipoListaQuestoes);
/*-----------------------------------------------------------------------------------------------*/

/*-----------------------------------------------------------------------------------------------*/
//Retorna TRUE se a lista de Opcoes está vazia
/*-----------------------------------------------------------------------------------------------*/
int VaziaO(TipoListaOpcoes);
/*-----------------------------------------------------------------------------------------------*/

/*-----------------------------------------------------------------------------------------------*/
//Faz uma Lista de Questoes Ficar Vazia
/*-----------------------------------------------------------------------------------------------*/
void FLVaziaQ(TipoListaQuestoes *);
/*-----------------------------------------------------------------------------------------------*/

/*-----------------------------------------------------------------------------------------------*/
//Faz uma Lista de Opcoes Ficar Vazia
/*-----------------------------------------------------------------------------------------------*/
void FLVaziaO(TipoListaOpcoes *);
/*-----------------------------------------------------------------------------------------------*/

/*-----------------------------------------------------------------------------------------------*/
//Insere uma questao x em uma lista de questoes
/*-----------------------------------------------------------------------------------------------*/
void InsereQuestao(TipoQuestao, TipoListaQuestoes *);
/*-----------------------------------------------------------------------------------------------*/

/*-----------------------------------------------------------------------------------------------*/
//Insere uma opcao x em uma lista de opcoes
/*-----------------------------------------------------------------------------------------------*/
void InsereOp(TipoOpcao, TipoListaOpcoes *);
/*-----------------------------------------------------------------------------------------------*/

/*-----------------------------------------------------------------------------------------------*/
//função para ler uma string
/*-----------------------------------------------------------------------------------------------*/
void lestring(char **);
/*-----------------------------------------------------------------------------------------------*/
/*-----------------------------------------------------------------------------------------------*/
//le o proximo item lexico apontado pelo arquivo dado 
/*-----------------------------------------------------------------------------------------------*/
char* Proximo_item_lexico(FILE *);
/*-----------------------------------------------------------------------------------------------*/

/*-----------------------------------------------------------------------------------------------*/
//le uma prova e salva em uma lista de questoes
/*-----------------------------------------------------------------------------------------------*/
void le_arquivo (TipoListaQuestoes *);
/*-----------------------------------------------------------------------------------------------*/

#endif

